//
//  DocumentLogVC.m
//  emSigner
//
//  Created by Administrator on 8/2/16.
//  Copyright Â© 2016 Emudhra. All rights reserved.
//

#import "DocumentLogVC.h"
#import "MBProgressHUD.h"
#import "NSObject+Activity.h"
#import "WebserviceManager.h"
#import "HoursConstants.h"
#import "AppDelegate.h"
@interface DocumentLogVC ()
{
    NSString *descriptionStr;
}

@end

@implementation DocumentLogVC

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
   // [self.tableView setContentOffset:CGPointMake(0.0, self.tableView.tableHeaderView.frame.size.height) animated:YES];
   // _tableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];
    
//    UIImage *img = [UIImage imageNamed:@"logo-1.png"];
//    UIImageView *imgView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 30, 30)];
//    [imgView setImage:img];
//    // setContent mode aspect fit
//    [imgView setContentMode:UIViewContentModeScaleAspectFit];
//    self.navigationItem.titleView = imgView;
    
    _docArray = [NSMutableArray arrayWithObjects:@"Document Name",@"Document Owner", @"Document Number",@"Uploaded",@"Category", nil];
    
    
    self.navigationController.navigationBar.topItem.backBarButtonItem = [[UIBarButtonItem alloc]
                                                                         initWithTitle:@"Back" style:UIBarButtonItemStylePlain target:nil action:nil];
   // self.navigationController.navigationBar.topItem.title = @"Document Details";

    self.title = @"Document Details";;
    [self.navigationController.navigationBar setTitleTextAttributes:
     @{NSForegroundColorAttributeName:[UIColor whiteColor]}];
    
   // [self.tableView registerNib:[UINib nibWithNibName:@"CustomDocumentLogTableViewCell" bundle:nil] forCellReuseIdentifier:@"CustomDocumentLogTableViewCell"];
    [self.tableView registerNib:[UINib nibWithNibName:@"DocumentLogTableViewCell" bundle:nil] forCellReuseIdentifier:@"DocumentLogTableViewCell"];
    self.tableView.allowsSelection = NO;
    /*************************Web Service*******************************/
    
    [self startActivity:@"Loading..."];
    NSString *requestURL = [NSString stringWithFormat:@"%@GetDocumentLogById?workflowId=%@",kDocumentlog,_workflowID];
    
    [WebserviceManager sendSyncRequestWithURLGet:requestURL method:SAServiceReqestHTTPMethodGET body:requestURL completionBlock:^(BOOL status, id responseValue) {
        
        if(status)
        {
             dispatch_async(dispatch_get_main_queue(), ^{   
            _documentNamesDic = [responseValue valueForKey:@"Response"];
                 
            //_docArray = [responseValue valueForKey:@"Response"];
                 
            [_tableView reloadData];
            
            [self stopActivity];
           }); 
            
        }
        else{
            
            
        }
        
    }];

}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    // Return the number of sections.
    return 2;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    // Return the number of rows in the section.
    if (section == 0)
    {
        return 5;
        
    } else return [[_documentNamesDic valueForKey:@"Desecription"] count];//if (section == 1)
   // {
       
   // }
    
    //return 1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    switch (indexPath.section)
    {
        case 0:
        {
            static NSString *CellIdentifier = @"cell";
            UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];

            cell.selectionStyle = UITableViewCellSelectionStyleNone;
           // cell.all
            cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:CellIdentifier];
            cell.textLabel.text = [_docArray objectAtIndex:indexPath.row];
            if (indexPath.row == 0) {
                
                [cell.detailTextLabel setText:[[AppDelegate AppDelegateInstance] strCheckNull:[NSString stringWithFormat:@"%@",[NSString stringWithFormat:@"%@",[_documentNamesDic valueForKey:@"DocumentName"]]]]];
            }
            else if (indexPath.row == 1)
            {
                [cell.detailTextLabel setText:[[AppDelegate AppDelegateInstance] strCheckNull:[NSString stringWithFormat:@"%@",[NSString stringWithFormat:@"%@",[_documentNamesDic valueForKey:@"Name"]]]]];
            }
            else if (indexPath.row == 2)
            {
                
                 [cell.detailTextLabel setText:[[AppDelegate AppDelegateInstance] strCheckNull:[NSString stringWithFormat:@"%@",[NSString stringWithFormat:@"%@",[_documentNamesDic valueForKey:@"DocumentNumber"]]]]];
                
            }
            else if (indexPath.row == 3)
            {
                
                NSString *dateFromArray = [[AppDelegate AppDelegateInstance] strCheckNull:[NSString stringWithFormat:@"%@",[NSString stringWithFormat:@"%@",[_documentNamesDic valueForKey:@"UploadedDatetime"]]]];
                
                if (![dateFromArray isEqualToString:@"N/A"])
                {
                    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
                    [formatter setDateFormat:@"dd-MM-yyyy HH:mm:ss"];
                    NSDate *dates = [formatter dateFromString:dateFromArray];
                    cell.detailTextLabel.text = [self transformedValue:dates];
                }
                else cell.detailTextLabel.text = dateFromArray;
                
                
                
//                if (![dateFromArray isEqualToString:@"N/A"]) {
//                NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
//                [formatter setDateFormat:@"MM-dd-yyyy HH:mm:ss"];
//                NSDate *dates = [formatter dateFromString:dateFromArray];
//                cell.detailTextLabel.text = [self transformedValue:dates];
//                }
//                else [cell.detailTextLabel setText:[[AppDelegate AppDelegateInstance] strCheckNull:[NSString stringWithFormat:@"%@",[NSString stringWithFormat:@"%@",[_documentNamesDic valueForKey:@"UploadedDatetime"]]]]];
               
            }
            else if (indexPath.row == 4)
            {
                [cell.detailTextLabel setText:[[AppDelegate AppDelegateInstance] strCheckNull:[NSString stringWithFormat:@"%@",[NSString stringWithFormat:@"%@",[_documentNamesDic valueForKey:@"CategoryName"]]]]];
            }
            
        return cell;
        }
             break;
        case 1:
        {
            DocumentLogTableViewCell *cell1 = [tableView dequeueReusableCellWithIdentifier:@"DocumentLogTableViewCell"];
            //Check Null String
            descriptionStr=[[AppDelegate AppDelegateInstance] strCheckNull:[NSString stringWithFormat:@"%@",[[_documentNamesDic valueForKey:@"Desecription"] objectAtIndex:indexPath.row]]];
            cell1.descriptionTextView.text = descriptionStr;
            cell1.selectionStyle = UITableViewCellSelectionStyleNone;
            //Check Null String Date
            NSString *descriptionStr1;
            descriptionStr1=[[AppDelegate AppDelegateInstance] strCheckNull:[NSString stringWithFormat:@"%@",[[_documentNamesDic valueForKey:@"ModifyDateTime"] objectAtIndex:indexPath.row]]];
            
            NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
            [formatter setDateFormat:@"dd-MM-yyyy HH:mm:ss"];
            NSDate *dates = [formatter dateFromString:descriptionStr1];

            NSString *transformedDate = [self transformedValue:dates];
            cell1.dateTimeLable.text = transformedDate ;
            
            return cell1;
        }
             break;
        default:
            break;
    }
    abort();
}

- (id)transformedValue:(NSDate *)date
{
    // Initialize the formatter.
    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
    [formatter setDateStyle:NSDateFormatterShortStyle];
    [formatter setTimeStyle:NSDateFormatterNoStyle];
    
    // Initialize the calendar and flags.
    unsigned unitFlags = NSYearCalendarUnit | NSMonthCalendarUnit |  NSDayCalendarUnit | NSWeekdayCalendarUnit;
    NSCalendar *calendar = [NSCalendar currentCalendar];
    
    // Create reference date for supplied date.
    NSDateComponents *comps = [calendar components:unitFlags fromDate:date];
    [comps setHour:0];
    [comps setMinute:0];
    [comps setSecond:0];
    NSDate *suppliedDate = [calendar dateFromComponents:comps];
    
    // Iterate through the eight days (tomorrow, today, and the last six).
    int i;
    for (i = -1; i < 7; i++)
    {
        // Initialize reference date.
        comps = [calendar components:unitFlags fromDate:[NSDate date]];
        [comps setHour:0];
        [comps setMinute:0];
        [comps setSecond:0];
        [comps setDay:[comps day] - i];
        NSDate *referenceDate = [calendar dateFromComponents:comps];
        // Get week day (starts at 1).
        int weekday = [[calendar components:unitFlags fromDate:referenceDate] weekday] - 1;
        
        if ([suppliedDate compare:referenceDate] == NSOrderedSame && i == -1)
        {
            // Tomorrow
            return [NSString stringWithString:@"Tomorrow"];
        }
        else if ([suppliedDate compare:referenceDate] == NSOrderedSame && i == 0)
        {
            // Today's time (a la iPhone Mail)
            formatter.dateFormat = @"HH:mm:ss";
            NSString *convertedString = [formatter stringFromDate:date];
            // [formatter setDateStyle:NSDateFormatterNoStyle];
            //[formatter setTimeStyle:NSDateFormatterShortStyle];
            return convertedString;
        }
        else if ([suppliedDate compare:referenceDate] == NSOrderedSame && i == 1)
        {
            // Today
            return [NSString stringWithString:@"Yesterday"];
        }
        else if ([suppliedDate compare:referenceDate] == NSOrderedSame)
        {
            // Day of the week
            NSString *day = [[formatter weekdaySymbols] objectAtIndex:weekday];
            return day;
        }
    }
    
    // It's not in those eight days.
    NSString *defaultDate = [formatter stringFromDate:date];
    return defaultDate;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0) {
        return 50;
        
    } else if (indexPath.section == 1) {
        //gastos is an array
        if ([descriptionStr isEqualToString:@""]) {
            return 0;
        }
        return 101;
    }
    return 0;
    //return 120.0;
}
- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section
{
    if (section == 0) {
        return @"Document Log Info";
        
    } else if (section == 1) {
        
        return @"Document Log Details";;
    }
    return 0;
}
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (section == 0)
    {
        return 60;
        
    } else if (section == 1) {
    
        return 40;
    }
    return 0;
}
//- (void)tableView:(UITableView *)tableView willDisplayHeaderView:(UIView *)view forSection:(NSInteger)section
//{
//    UITableViewHeaderFooterView *v = (UITableViewHeaderFooterView *)view;
//    v.backgroundView.backgroundColor =  [UIColor colorWithRed:241/255.0 green:241/255.0 blue:241/255.0 alpha:1];
//    [v.textLabel setTextColor:[UIColor colorWithRed:51/255.0 green:51/255.0 blue:51/255.0 alpha:1]];

//}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
}


//- (id)transformedValue:(NSDate *)date
//{
//    // Initialize the formatter.
//    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
//    [formatter setDateStyle:NSDateFormatterShortStyle];
//    [formatter setTimeStyle:NSDateFormatterNoStyle];
//
//    // Initialize the calendar and flags.
//    unsigned unitFlags = NSYearCalendarUnit | NSMonthCalendarUnit |  NSDayCalendarUnit | NSWeekdayCalendarUnit;
//    NSCalendar *calendar = [NSCalendar currentCalendar];
//
//    // Create reference date for supplied date.
//    NSDateComponents *comps = [calendar components:unitFlags fromDate:date];
//    [comps setHour:0];
//    [comps setMinute:0];
//    [comps setSecond:0];
//    NSDate *suppliedDate = [calendar dateFromComponents:comps];
//
//    // Iterate through the eight days (tomorrow, today, and the last six).
//    int i;
//    for (i = -1; i < 7; i++)
//    {
//        // Initialize reference date.
//        comps = [calendar components:unitFlags fromDate:[NSDate date]];
//        [comps setHour:0];
//        [comps setMinute:0];
//        [comps setSecond:0];
//        [comps setDay:[comps day] - i];
//        NSDate *referenceDate = [calendar dateFromComponents:comps];
//        // Get week day (starts at 1).
//        int weekday = [[calendar components:unitFlags fromDate:referenceDate] weekday] - 1;
//
//        if ([suppliedDate compare:referenceDate] == NSOrderedSame && i == -1)
//        {
//            // Tomorrow
//            return [NSString stringWithString:@"Tomorrow"];
//        }
//        else if ([suppliedDate compare:referenceDate] == NSOrderedSame && i == 0)
//        {
//            // Today's time (a la iPhone Mail)
//            formatter.dateFormat = @"HH:mm:ss";
//            NSString *convertedString = [formatter stringFromDate:date];
//            // [formatter setDateStyle:NSDateFormatterNoStyle];
//            //[formatter setTimeStyle:NSDateFormatterShortStyle];
//            return convertedString;
//        }
//        else if ([suppliedDate compare:referenceDate] == NSOrderedSame && i == 1)
//        {
//            // Today
//            return [NSString stringWithString:@"Yesterday"];
//        }
//        else if ([suppliedDate compare:referenceDate] == NSOrderedSame)
//        {
//            // Day of the week
//            NSString *day = [[formatter weekdaySymbols] objectAtIndex:weekday];
//            return day;
//        }
//    }
//
//    // It's not in those eight days.
//    NSString *defaultDate = [formatter stringFromDate:date];
//    return defaultDate;
//}




- (void)textViewDidChange:(UITextView *)textView
{
    CGFloat fixedWidth = textView.frame.size.width;
    CGSize newSize = [textView sizeThatFits:CGSizeMake(fixedWidth, MAXFLOAT)];
    CGRect newFrame = textView.frame;
    newFrame.size = CGSizeMake(fmaxf(newSize.width, fixedWidth), newSize.height);
    textView.frame = newFrame;
}
- (IBAction)backBtn:(id)sender
{
    
    [self dismissViewControllerAnimated:YES completion:Nil];
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/


@end
