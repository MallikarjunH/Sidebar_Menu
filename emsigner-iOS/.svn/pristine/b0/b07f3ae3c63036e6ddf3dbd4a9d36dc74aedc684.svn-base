//
//  DocsPage.m
//  emSigner
//
//  Created by Emudhra on 27/07/18.
//  Copyright Â© 2018 Emudhra. All rights reserved.
//

#import "DocsPage.h"
#import "DocsCell.h"
#import "WebserviceManager.h"
#import "HoursConstants.h"
#import "SingletonAPI.h"
#import "AppDelegate.h"
#import "BaseViewController.h"
#import "HomeNewDashBoardVC.h"
#import "CoSignPendingVC.h"
#import "PendingVC.h"
#import "DeclineStatusVC.h"
#import "CompleteStatusVC.h"
#import "RecallStatusVC.h"
#import "RateUsVC.h"
#import "ViewController.h"
#import "MBProgressHUD.h"
#import "NSObject+Activity.h"
#import "Reachability.h"
#import "DocStoreVC.h"
#import "WorkflowTableViewController.h"


@interface DocsPage ()

@end

@implementation DocsPage

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view.

    self.title = _titleName;
    [self.navigationController.navigationBar setTitleTextAttributes:
     @{NSForegroundColorAttributeName:[UIColor whiteColor]}];
    
    self.categoriesArray = [NSMutableArray arrayWithObjects: @"Pending", @"In Progress", @"Declined", @"Recalled", @"Completed", nil];

    self.DocumentTypeImageview = @[@"pending-1x",@"ico-waiting-32",@"decline-1x",@"recalled-1x",@"completed-1x"];

    _docsTableView.delegate = self;
    _docsTableView.dataSource =self;
    
    _docsTableView.scrollEnabled = NO;

}

-(void)viewWillAppear:(BOOL)animated
{
    
    [self dashBoardCount];
    [self profileDetails];
   // [self stopActivity];
}

-(void)dashBoardCount
{
    NSString *requestURL = [NSString stringWithFormat:@"%@GetDashboardSummary",kGetDashboardSummary];
    
    [WebserviceManager sendSyncRequestWithURLGet:requestURL method:SAServiceReqestHTTPMethodGET body:requestURL completionBlock:^(BOOL status, id responseValue) {
        if(status)
        {
            dispatch_async(dispatch_get_main_queue(),
                           ^{
                               
                               _responseArray=[responseValue valueForKey:@"Response"];
                               
                               if (_responseArray != (id)[NSNull null])
                               {
                                   _searchResults = [[NSMutableArray alloc]initWithArray:(NSMutableArray*)_responseArray];
                                   
                                   [_docsTableView reloadData];
                                   
                                   [self stopActivity];
                                   
                                   // [self stopActivity];
                               }
                               else
                               {
                                   [_docsTableView reloadData];
                                   
                                   [self stopActivity];
                               }
                               
                           });
        }
        else{
            // if ([responseValue isKindOfClass:[NSString class]]) {
            // if ([responseValue isEqualToString:@"Invalid token Please Contact Adminstrator"]) {
            
            UIAlertController * alert = [UIAlertController
                                         alertControllerWithTitle:nil
                                         message:@"Your emsigner account is no longer active.Please login again"
                                         preferredStyle:UIAlertControllerStyleAlert];
            
            //Add Buttons
            
            UIAlertAction* yesButton = [UIAlertAction
                                        actionWithTitle:@"Ok"
                                        style:UIAlertActionStyleDefault
                                        handler:^(UIAlertAction * action) {
                                            //Handle your yes please button action here
                                            //Logout
                                            AppDelegate *theDelegate = (AppDelegate*)[[UIApplication sharedApplication] delegate];
                                            theDelegate.isLoggedIn = NO;
                                            [[NSUserDefaults standardUserDefaults] setObject:[NSNumber numberWithBool:theDelegate.isLoggedIn] forKey:@"isLogin"];
                                            [NSUserDefaults resetStandardUserDefaults];
                                            [NSUserDefaults standardUserDefaults];
                                            UIStoryboard *newStoryBoard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
                                            ViewController *objTrackOrderVC= [newStoryBoard instantiateViewControllerWithIdentifier:@"ViewController"];
                                            [self presentViewController:objTrackOrderVC animated:YES completion:nil];
                                        }];
            
            [alert addAction:yesButton];
            
            [self presentViewController:alert animated:YES completion:nil];
            
            return;
        }
        //}
        
        // }
        
    }];
    
    
}


-(void)profileDetails
{
    //[self startActivity:@"Loading..."];
    NSString *requestURL = [NSString stringWithFormat:@"%@GetProfileDetails",kMyProfile];
    
    [WebserviceManager sendSyncRequestWithURLGet:requestURL method:SAServiceReqestHTTPMethodGET body:requestURL completionBlock:^(BOOL status, id responseValue) {
        if(status)
        {
            dispatch_async(dispatch_get_main_queue(),
                           ^{
                               if ([responseValue isKindOfClass:[NSString class]]) {
                                   if ([responseValue isEqualToString:@"Invalid token Please Contact Adminstrator"]) {
                                       
                                       UIAlertController * alert = [UIAlertController
                                                                    alertControllerWithTitle:nil
                                                                    message:@"Your emsigner account is no longer active. Contact your administrator"
                                                                    preferredStyle:UIAlertControllerStyleAlert];
                                       
                                       //Add Buttons
                                       
                                       UIAlertAction* yesButton = [UIAlertAction
                                                                   actionWithTitle:@"Ok"
                                                                   style:UIAlertActionStyleDefault
                                                                   handler:^(UIAlertAction * action) {
                                                                       //Handle your yes please button action here
                                                                       //Logout
                                                                       AppDelegate *theDelegate = (AppDelegate*)[[UIApplication sharedApplication] delegate];
                                                                       theDelegate.isLoggedIn = NO;
                                                                       [[NSUserDefaults standardUserDefaults] setObject:[NSNumber numberWithBool:theDelegate.isLoggedIn] forKey:@"isLogin"];
                                                                       [NSUserDefaults resetStandardUserDefaults];
                                                                       [NSUserDefaults standardUserDefaults];
                                                                       UIStoryboard *newStoryBoard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
                                                                       ViewController *objTrackOrderVC= [newStoryBoard instantiateViewControllerWithIdentifier:@"ViewController"];
                                                                       //[self.navigationController pushViewController:objTrackOrderVC animated:YES];
                                                                       [self presentViewController:objTrackOrderVC animated:YES completion:nil];
                                                                   }];
                                       [alert addAction:yesButton];
                                       [self presentViewController:alert animated:YES completion:nil];
                                       return;
                                   }
                                   
                               }
                               
                            NSMutableArray* _profileArray = [responseValue valueForKey:@"Response"];
                               
                               NSString *name = [NSString stringWithFormat:@"%@",[_profileArray valueForKey:@"FullName"]];
                               [[NSUserDefaults standardUserDefaults] setObject:name forKey:@"Name"];
                               [[NSUserDefaults standardUserDefaults] synchronize];
                               
                               //Saving Email
                               NSString *email = [NSString stringWithFormat:@"%@",[_profileArray valueForKey:@"PlanName"]];
                               [[NSUserDefaults standardUserDefaults] setObject:email forKey:@"PlanName"];
                               [[NSUserDefaults standardUserDefaults] synchronize];
                               
                              // [self stopActivity];
                           });
        }
        else{
        }
    }];
    //[self stopActivity];
}



#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 3;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (section == 0) {
       return  _categoriesArray.count;
    }
    else return 1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    if(indexPath.section == 0)
    {
        static NSString *cellIdentifier = @"cell";
        DocsCell *cell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier forIndexPath:indexPath];
        cell.docsLabel.text = (self.categoriesArray)[indexPath.row];

        if (indexPath.row == 0) {
            
            NSArray* pending = [self filteredArray:@"Status" :@"Pending"];
            NSArray* inprogress = [self filteredArray:@"Status" :@"CosignPending"];
            long pendingNumber = 0;
            long inprogressNumber = 0;
            
            if (pending.count !=0) {
                
                 pendingNumber = [[[pending objectAtIndex:0] valueForKey:@"Count"]integerValue];
                 inprogressNumber = [[[inprogress objectAtIndex:0] valueForKey:@"Count"]integerValue];
                
            }
            else
            {
                
            }
            long subtract = pendingNumber - inprogressNumber;
                if (pending.count == 0) {
                [cell.docsCount setTitle:@"0" forState:UIControlStateNormal];
            }
            else
            {
                [cell.docsCount setTitle:[NSString stringWithFormat:@"%ld",subtract] forState:UIControlStateNormal];
            }

        }
        else if (indexPath.row == 1)
        {
             NSArray* inprogress = [self filteredArray:@"Status" :@"CosignPending"];
            if (inprogress.count == 0) {
                [cell.docsCount setTitle:@"0" forState:UIControlStateNormal];
            }
            else
            {
                [cell.docsCount setTitle:[NSString stringWithFormat:@"%@", [[inprogress objectAtIndex:0] valueForKey:@"Count"]] forState:UIControlStateNormal];
            }
            
            }

        else if (indexPath.row == 2)
        {
            NSArray* declined = [self filteredArray:@"Status" :@"Declined"];
            if (declined.count==0) {
                [cell.docsCount setTitle:@"0" forState:UIControlStateNormal];
            }
            else
            {
                [cell.docsCount setTitle:[NSString stringWithFormat:@"%@", [[declined objectAtIndex:0] valueForKey:@"Count"]] forState:UIControlStateNormal];
            }
        }
        else if (indexPath.row == 3)
        {
            NSArray* recalled = [self filteredArray:@"Status" :@"Recalled"];
            if (recalled .count==0) {
                [cell.docsCount setTitle:@"0" forState:UIControlStateNormal];
            }
            else
            {
                [cell.docsCount setTitle:[NSString stringWithFormat:@"%@", [[recalled objectAtIndex:0] valueForKey:@"Count"]] forState:UIControlStateNormal];
            }
        }
        else if (indexPath.row == 4)
        {
            NSArray* completed = [self filteredArray:@"Status" :@"Completed"];
            if (completed .count == 0) {
                [cell.docsCount setTitle:@"0" forState:UIControlStateNormal];
            }
            else
            {
                [cell.docsCount setTitle:[NSString stringWithFormat:@"%@", [[completed objectAtIndex:0] valueForKey:@"Count"]] forState:UIControlStateNormal];
            }
        }
        
        [cell.docsImageView setImage:[UIImage imageNamed:[_DocumentTypeImageview objectAtIndex:indexPath.row]]];
        return cell;

        }
    else if(indexPath.section == 1)
    {
        NSString *CellIdentifier = @"docscell";
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
        return cell;

    }
    else
    {
        NSString *CellIdentifier = @"workFlows";
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
        return cell;
        
    }
}

-(NSArray*)filteredArray:(NSString*)Status:(NSString*)Value
{
    return [_searchResults filteredArrayUsingPredicate:[NSPredicate predicateWithBlock:^BOOL(id elem, NSDictionary *bindings) {
        return ([[elem objectForKey:Status]  isEqual: Value]);
        
    }]];
    
}

- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section {
    if (section == 0) {
        return @"Browse By Categories";
    }
    else return @"";
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    if (section == 0) {
        return 70;
    }
    if (section == 1) {
        return 30;
    }
    return 5;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
//    if (section == 1)
//    {
//        return 10.0f;
//    }
    return 0.01f;
}



- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    BaseViewController *goToBase = [[BaseViewController alloc]init];
    NSArray *documentType = @[@"Pending",@"In Progress",@"Drafts", @"Declined",@"Recalled",@"Completed"];
    
    if (indexPath.section == 0) {
        
    switch (indexPath.row) {
        case 0:
        {

            
            UIStoryboard *newStoryBoard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
            HomeNewDashBoardVC *objTrackOrderVC= [newStoryBoard instantiateViewControllerWithIdentifier:@"HomeNewDashBoardVC"];
            objTrackOrderVC.title = @"Pending";
            [self.navigationController pushViewController:objTrackOrderVC animated:YES];

        }
            
            break;
        case 1:
        {
            PendingVC *objTrackOrderVC = [[PendingVC alloc] initWithNibName:@"PendingVC" bundle:nil];
            objTrackOrderVC.title = @"In Progress";
            [self.navigationController pushViewController:objTrackOrderVC animated:YES];
        }
            
            break;
            
        case 2:
        {
            
            DeclineStatusVC *objTrackOrderVC= [[DeclineStatusVC alloc]initWithNibName:@"DeclineStatusVC" bundle:nil];
            objTrackOrderVC.title = @"Declined";
            [self.navigationController pushViewController:objTrackOrderVC animated:YES];
            
        }
            
            break;
            
        case 3:
        {
           
            RecallStatusVC *objTrackOrderVC= [[RecallStatusVC alloc] initWithNibName:@"RecallStatusVC" bundle:nil];
            objTrackOrderVC.title = @"Recalled";
            [self.navigationController pushViewController:objTrackOrderVC animated:YES];
            
        }
            
            break;
            
        case 4:
        {
            CompleteStatusVC *objTrackOrderVC= [[CompleteStatusVC alloc]initWithNibName:@"CompleteStatusVC" bundle:nil];
            objTrackOrderVC.title = @"Completed";
            [self.navigationController pushViewController:objTrackOrderVC animated:YES];
    
        }
            break;
        default:
            break;
    }
    }
    else if (indexPath.section == 1)
    {
        UIStoryboard *newStoryBoard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
        DocStoreVC *objTrackOrderVC= [newStoryBoard instantiateViewControllerWithIdentifier:@"DocStoreVC"];
        objTrackOrderVC.title = @"All Documents";
        [self.navigationController pushViewController:objTrackOrderVC animated:YES];
        
    }
    
    else
        {
            WorkflowTableViewController *objTrackOrderVC= [[WorkflowTableViewController alloc] initWithNibName:@"WorkflowTableViewController" bundle:nil];
            //objTrackOrderVC.categoryId = [NSString stringWithFormat:@"%d",CategoryId];
            [self.navigationController pushViewController:objTrackOrderVC animated:YES];
            
        }
       
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
