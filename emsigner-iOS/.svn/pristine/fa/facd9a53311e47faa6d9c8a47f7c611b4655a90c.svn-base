//
//  CheckPasswordVC.m
//  emSigner
//
//  Created by Admin on 17/10/17.
//  Copyright Â© 2017 Emudhra. All rights reserved.
//

#import "CheckPasswordVC.h"
#import "WebserviceManager.h"
#import "HoursConstants.h"
#import "SingletonAPI.h"
#import "MBProgressHUD.h"
#import "NSObject+Activity.h"
#import "mupdf/MuDocRef.h"
#include "mupdf/fitz.h"
#include "mupdf/common.h"
#import "PendingListVC.h"

@interface CheckPasswordVC ()

@end

@implementation CheckPasswordVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
   
    
    self.okBtnClicked.layer.cornerRadius = 10;
    self.cancelBtnClicked.layer.cornerRadius = 10;
    
    //TextField Down Border
    CALayer *border = [CALayer layer];
    CGFloat borderWidth = 1;
    border.borderColor = ([UIColor colorWithRed:221.0/255.0 green:221.0/255.0 blue:221.0/255.0 alpha:1.0].CGColor);
    border.frame = CGRectMake(0, _passwordText.frame.size.height - borderWidth, _passwordText.frame.size.width, _passwordText.frame.size.height);
    border.borderWidth = borderWidth;
    [_passwordText.layer addSublayer:border];
    _passwordText.layer.masksToBounds = YES;
 
    _customView.layer.cornerRadius = 10;
    _customView.layer.masksToBounds = YES;
    
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
- (BOOL)textFieldShouldReturn:(UITextField *)textField {
   
    [textField resignFirstResponder];
    return YES;
}
- (IBAction)okBtnClicked:(id)sender {
    //[self dismissViewControllerAnimated:YES completion:Nil];
    
    if (_passwordText.text.length > 0 && _passwordText.text == @"") {
        
        UIAlertController* alert = [UIAlertController alertControllerWithTitle:@"emSigner Alert"
                                                                       message:@"Password cannot be empty."
                                                                preferredStyle:UIAlertControllerStyleAlert];
        
        UIAlertAction* defaultAction = [UIAlertAction actionWithTitle:@"OK" style:UIAlertActionStyleDefault
                                                              handler:^(UIAlertAction * action) {}];
        
        [alert addAction:defaultAction];
        [self presentViewController:alert animated:YES completion:nil];
        
    }
    else
    {
        [self startActivity:@"Loading..."];
        
        NSString *requestURL = [NSString stringWithFormat:@"%@GetDocumentDetailsById?workFlowId=%@",kOpenPDFImage,[[NSUserDefaults standardUserDefaults]
                                                                                                                   valueForKey:@"PendingWorkflowID"]];
        [WebserviceManager sendSyncRequestWithURLGet:requestURL method:SAServiceReqestHTTPMethodGET body:requestURL completionBlock:^(BOOL status, id responseValue) {
            
            if(status)
            {
                dispatch_async(dispatch_get_main_queue(), ^{
                    
                    _checkNullArray = [responseValue valueForKey:@"Response"];
                    if (_checkNullArray == (id)[NSNull null])
                    {
                        UIAlertController * alert = [UIAlertController
                                                     alertControllerWithTitle:@""
                                                     message:@"File has been corrupted"
                                                     preferredStyle:UIAlertControllerStyleAlert];
                        
                        //Add Buttons
                        
                        UIAlertAction* yesButton = [UIAlertAction
                                                    actionWithTitle:@"Ok"
                                                    style:UIAlertActionStyleDefault
                                                    handler:^(UIAlertAction * action) {
                                                        //Handle your yes please button action here
                                                        
                                                    }];
                        
                        //Add your buttons to alert controller
                        
                        [alert addAction:yesButton];
                        
                        [self presentViewController:alert animated:YES completion:nil];
                        [self stopActivity];
                        
                        return;
                    }
                    //FileDataBytes
                    _pdfImageArray=[[responseValue valueForKey:@"Response"] valueForKey:@"Document"];
                    
                    if (_pdfImageArray != (id)[NSNull null])
                    {
                        
                        [self dismissViewControllerAnimated:YES completion:nil];
                        NSData *data = [[NSData alloc]initWithBase64EncodedString:_pdfImageArray options:0];
                        // from your converted Base64 string
                        NSString *documentsDirectory = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES)[0];
                        
                        CFUUIDRef uuid = CFUUIDCreate(NULL);
                        CFStringRef uuidString = CFUUIDCreateString(NULL, uuid);
                        CFRelease(uuid);
                        NSString *uniqueFileName = [NSString stringWithFormat:@"%@%@",(__bridge NSString *)uuidString, [[NSUserDefaults standardUserDefaults]valueForKey:@"PendingDisplayName"]];
                        
                        NSString *path = [documentsDirectory stringByAppendingPathComponent:uniqueFileName];
                        [data writeToFile:path atomically:YES];
                        
                        MuDocRef *doc;
                        
                        doc = [[MuDocRef alloc] initWithFilename:path];
                        if (!doc) {
                            NSLog(@"Cannot open document '%@'", path);
                            //return YES;
                        }
                        
                        PendingListVC *temp = [[PendingListVC alloc] initWithFilename:path path:path document: doc];
//                        temp.pdfImagedetail = _pdfImageArray;
//                        temp.workFlowID = [[NSUserDefaults standardUserDefaults]valueForKey:@"PendingWorkflowID"];
//                        temp.documentCount = [[[responseValue valueForKey:@"Response"] valueForKey:@"NoOfDocuments"] integerValue];
//                        temp.attachmentCount = [[[responseValue valueForKey:@"Response"] valueForKey:@"NoOfAttachments"] integerValue];
//                        temp.isPasswordProtected = [[[responseValue valueForKey:@"Response"] valueForKey:@"IsPasswordProtected"] boolValue];
//                        temp.myTitle = [[NSUserDefaults standardUserDefaults]valueForKey:@"PendingDisplayName"];
                        [self.navigationController pushViewController:temp animated:YES];
                        [self stopActivity];
                        
                    }
                    else{
                        
                        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Error" message: @"This file was corrupted. Please contact eMudhra for more details." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
                        [alert show];
                        [self stopActivity];
                    }
                });
                
            }
            else{
                //Alert at the time of no server connection
                
                UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Alert" message: @"Try again" delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
                [alert show];
                [self stopActivity];
                
            }
            
        }];
        
    }
        
        
    
    
}

- (IBAction)cancelBtnClicked:(id)sender {
    [self dismissViewControllerAnimated:YES completion:Nil];
}
/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/


@end
