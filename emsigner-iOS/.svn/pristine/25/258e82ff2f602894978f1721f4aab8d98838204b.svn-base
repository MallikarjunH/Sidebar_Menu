//
//  ViewController.m
//  imagecroper
//
//  Created by Administrator on 10/12/18.
//  Copyright Â© 2018 Emudhra. All rights reserved.
//

#import "UploadDocuments.h"
#import "ImagelistCell.h"
#import "ShowEditImagesFromImageList.h"
#import "AppDelegate.h"
#import "Documents+CoreDataProperties.h"


@interface UploadDocuments ()
{
    NSString* meta;
    NSMutableArray *countArray;
}
@property (retain,nonatomic) NSFetchedResultsController *
fetchedResultsController;
@property(retain,nonatomic)AppDelegate *appDelegate;

@end

@implementation UploadDocuments
@synthesize fetchedResultsController;

- (void)viewDidLoad {
    [super viewDidLoad];
    NSLog(@"%@",_sendarray);
    
    // Do any additional setup after loading the view, typically from a nib.
    _pickImagesandDate = [[NSMutableArray alloc]init];
    _arrayForDelegate = [[NSMutableArray alloc]init];
    _SelectedArray = [[NSMutableArray alloc]init];
    _listTable.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];

    countArray = [[NSMutableArray alloc]init];
    [self.listTable registerNib:[UINib nibWithNibName:@"ImagelistCell" bundle:nil] forCellReuseIdentifier:@"ImagelistCell"];
    
    
    self.navigationController.navigationBar.barTintColor = [UIColor colorWithRed:0 green:96.0/255.0 blue:192.0/255.0 alpha:1.0];
    self.navigationController.navigationBar.tintColor = [UIColor whiteColor];

    
    UIBarButtonItem* customBarButtonItem = [[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemStop target:self action:@selector(dismissViewController)];
    
    self.navigationItem.leftBarButtonItem = customBarButtonItem;
    
    // [self.tableView reloadData];
}
-(void)dismissViewController{
    [self dismissViewControllerAnimated:true completion:nil];
}

-(void)viewWillAppear:(BOOL)animated
{
//    _appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
//    NSFetchRequest *fetchRequest =
//    [[NSFetchRequest alloc] initWithEntityName:@"Documents"];
//    self.arrayForDelegate = [[_appDelegate.managedObjectContext executeFetchRequest:fetchRequest error:nil] mutableCopy];
//    fetchRequest.returnsObjectsAsFaults = NO;
//    NSLog(@"count=%ld", (unsigned long)self.sendarray.count);
//    //[self.listTable reloadData];
//    if (self.arrayForDelegate.count != 0) {
//        [self.listTable reloadData];
//    }
    [self.listTable reloadData];
}

-(void)viewWillDisappear:(BOOL)animated{
    [super
     viewWillDisappear:YES];
   // [_appDelegate saveContext];
}
- (IBAction)ControllerAction:(UIBarButtonItem *)sender {
    
    if (sender.tag == 1) {
        if ([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera])
        {
            UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init];
            [imagePicker setSourceType:UIImagePickerControllerSourceTypeCamera];
            [imagePicker setDelegate:self];
            [self presentViewController:imagePicker animated:YES completion:nil];

//            UIDocumentMenuViewController *picker =  [[UIDocumentMenuViewController alloc] initWithDocumentTypes:@[@"com.adobe.pdf"] inMode:UIDocumentPickerModeImport];
//
//            picker.delegate = self;
//
//            [self presentViewController:picker animated:YES completion:nil];
//
        
        }
        else
        {
            [[[UIAlertView alloc] initWithTitle:@"Warning" message:@"Your device doesn't have a camera." delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil, nil] show];
        }

    }
    else if (sender.tag == 2)
    {
        UIImagePickerController *imagePickerController = [[UIImagePickerController alloc] init];
        imagePickerController.delegate = self;
        [self presentViewController:imagePickerController animated:YES completion:nil];
    }
    else if (sender.tag == 3)
    {
//        if(image != nil){
//            ImageCropViewController *controller = [[ImageCropViewController alloc] initWithImage:image];
//            controller.delegate = self;
//            controller.blurredBackground = YES;
//            // set the cropped area
//            // controller.cropArea = CGRectMake(0, 0, 100, 200);
//            [[self navigationController] pushViewController:controller animated:YES];
//        }
        
        [self showDocumentPickerInMode:UIDocumentPickerModeOpen];
    }
    else if (sender.tag == 4)
    {
//        ImagesListView *objTrackOrderVC= [[ImagesListView alloc]initWithNibName:@"ImagesListView" bundle:nil];
//        objTrackOrderVC.title = @"ImagesListView";
//        objTrackOrderVC.catureImagesForListView = _pickImagesandDate;
//        objTrackOrderVC.blurredImageView.image = imageView.image;
//        [self.navigationController pushViewController:objTrackOrderVC animated:YES];
        
        
        
        
        
        //for sending document
//        if (image != nil){
//            UIImageWriteToSavedPhotosAlbum(image, self ,  @selector(thisImage:hasBeenSavedInPhotoAlbumWithError:usingContextInfo:), nil);
//
//            NSData *imageData = UIImageJPEGRepresentation(image, 1.0);
//            NSString *base64image=[imageData base64EncodedStringWithOptions:0];
//            NSLog(@"%@",base64image);
//             [[self navigationController] popViewControllerAnimated:true];
//
//        }
         // [self showDocumentPickerInMode:UIDocumentPickerModeOpen];
    }
}

- (void) imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    image = [info valueForKey:UIImagePickerControllerOriginalImage];
    imageView.image = image;
    //NSDictionary *metadataDictionary = (NSDictionary *)[info valueForKey:UIImagePickerControllerMediaMetadata];
    
    meta = [[[info objectForKey:UIImagePickerControllerMediaMetadata] objectForKey:@"{TIFF}"] objectForKey:@"DateTime"];
    
    if (meta == nil) {
            NSDateFormatter *form = [[NSDateFormatter alloc] init];
            form.dateFormat = @"yyyy:MM:dd HH:mm:ss";
            NSString* date = [form stringFromDate:[NSDate date]];
        [_pickImagesandDate addObject:@{@"Image":image,@"Date":date}];
    }
    else
    {
        [_pickImagesandDate addObject:@{@"Image":image,@"Date":meta}];

    }

    [[self navigationController] dismissViewControllerAnimated:YES completion:nil];
   // [_listTable reloadData]; // tell table to refresh now

    if(image != nil){
        ImageCropViewController *controller = [[ImageCropViewController alloc] initWithImage:image];
        controller.delegate = self;
        controller.blurredBackground = YES;
        // set the cropped area
        // controller.cropArea = CGRectMake(0, 0, 100, 200);
        [[self navigationController] pushViewController:controller animated:YES];
    }
    
}


- (void)ImageCropViewControllerSuccess:(ImageCropViewController *)controller didFinishCroppingImage:(UIImage *)croppedImage{
    image = croppedImage;
    imageView.image = croppedImage;
    
    CGRect cropArea = controller.cropArea;
    [[self navigationController] popViewControllerAnimated:YES];
    
}

- (void)ImageCropViewControllerDidCancel:(ImageCropViewController *)controller{
    imageView.image = image;
    [[self navigationController] popViewControllerAnimated:YES];
}

- (void)thisImage:(UIImage *)image hasBeenSavedInPhotoAlbumWithError:(NSError *)error usingContextInfo:(void*)ctxInfo {
    if (error) {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Fail!"
                                                        message:[NSString stringWithFormat:@"Saved with error %@", error.description]
                                                       delegate:nil
                                              cancelButtonTitle:@"OK"
                                              otherButtonTitles:nil];
        [alert show];
        
    } else {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Succes!"
                                                        message:@"Saved to camera roll"
                                                       delegate:nil
                                              cancelButtonTitle:@"OK"
                                              otherButtonTitles:nil];
        [alert show];
        
    }
}



#pragma mark- Open Document Picker(Delegate) for PDF, DOC Slection from iCloud


- (void)showDocumentPickerInMode:(UIDocumentPickerMode)mode
{
    
    UIDocumentMenuViewController *picker =  [[UIDocumentMenuViewController alloc] initWithDocumentTypes:@[@"com.adobe.pdf"] inMode:UIDocumentPickerModeImport];
    
    picker.delegate = self;
    //picker.allowsMultipleSelection = YES;
    
    [self presentViewController:picker animated:YES completion:nil];
}


-(void)documentMenu:(UIDocumentMenuViewController *)documentMenu didPickDocumentPicker:(UIDocumentPickerViewController *)documentPicker
{
    documentPicker.delegate = self;
    [self presentViewController:documentPicker animated:YES completion:nil];
}

- (void)documentPicker:(UIDocumentPickerViewController *)controller
  didPickDocumentAtURL:(NSURL *)url
{
    PDFUrl= url;
    UploadType=@"PDF";
    [arrimg removeAllObjects];
    [arrimg addObject:url];
    
}






#pragma mark- Open Image Picker Delegate to select image from Gallery or Camera
//- (void) imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
//{
//
//    UIImage *myImage = [info objectForKey:UIImagePickerControllerOriginalImage];
//
//    UploadType=@"Image";
//    [arrimg removeAllObjects];
//    [arrimg addObject:myImage];
//    [picker dismissViewControllerAnimated:YES completion:NULL];
//
//
//}


- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker
{
    
    [picker dismissViewControllerAnimated:YES completion:NULL];
    
}


#pragma mark - tableview data source and delegates


- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    
    return _pickImagesandDate.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
  
    ImagelistCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ImagelistCell" forIndexPath:indexPath];
   // Documents *beverage = _arrayForDelegate[indexPath.row];
   // NSArray * arr  = beverage.document;
    if (_pickImagesandDate == nil) {
        cell.ImageList.image = _blurredImageView.image;//[[_catureImagesForListView objectAtIndex:indexPath.row]valueForKey:@"Image"];
    }
    else
    {
        //cell.ImageList.image = [[arr objectAtIndex:indexPath.row]valueForKey:@"Image"];
       cell.ImageList.image = [_pickImagesandDate[indexPath.row] valueForKey:@"Image"];
       // cell.ImageList.image = [[arr objectAtIndex:indexPath.row] valueForKey:@"Image"];
    }
    cell.DocumentName.text = @"Document";//[_catureImagesForListView  valueForKey:@"CategoryName"];
  
    cell.DateAndTime.text  = [[_pickImagesandDate objectAtIndex:indexPath.row] valueForKey:@"Date"];
  //cell.DateAndTime.text  =  [[arr objectAtIndex:indexPath.row] valueForKey:@"Date"];
    NSInteger  indexCount = [[[NSUserDefaults standardUserDefaults]valueForKey:@"indexCount"]integerValue];
    if (indexPath.row == indexCount) {
        cell.countLabel.text =[NSString stringWithFormat:@"%lu",(unsigned long)countArray.count];

    }

    return cell;
    
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath {
    return YES;
}

- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath {
//    if (editingStyle == UITableViewCellEditingStyleDelete) {
//        [_pickImagesandDate removeObjectAtIndex:indexPath.row];
//
//        [tableView reloadData]; // tell table to refresh now
//    }
    if (editingStyle ==
        UITableViewCellEditingStyleDelete) {
        [_appDelegate.managedObjectContext deleteObject:[_pickImagesandDate objectAtIndex:indexPath.row]];
        [_pickImagesandDate removeObjectAtIndex:indexPath.row];
        [tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationFade];
        
    } else if (editingStyle ==
               UITableViewCellEditingStyleInsert) {
        // Create a new
       // instance of the appropriate class, insert it into the array, and add a new rowto the table view.
    }

}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSInteger indexCount = indexPath.row;
    [[NSUserDefaults standardUserDefaults] setInteger:indexCount forKey:@"indexCount"];
    [[NSUserDefaults standardUserDefaults] synchronize];
    
   // UIImage *carImage =  [[_pickImagesandDate objectAtIndex:indexPath.row]valueForKey:@"Image"];
    
    ShowEditImagesFromImageList *carDetailViewController = [[ShowEditImagesFromImageList alloc] initWithNibName:@"ShowEditImagesFromImageList" bundle:nil];
    carDetailViewController.delegate=self; // protocol listener
    carDetailViewController.sendarray = _sendarray;
    carDetailViewController.showMultImages=[NSMutableArray arrayWithObject:_pickImagesandDate[indexPath.row]] ;
    carDetailViewController.documentName = self.documentName;
    carDetailViewController.categoryname = _categoryname;
    [self.navigationController pushViewController: carDetailViewController animated:YES];
    
}

-(void)sendDataToA:(NSMutableDictionary *)dict
{
    // data will come here inside of ViewControllerA
    //[_pickImagesandDate addObject:array];
    NSInteger  indexCount = [[[NSUserDefaults standardUserDefaults]valueForKey:@"indexCount"]integerValue];
    NSIndexPath* rowToReload = [NSIndexPath indexPathForRow:indexCount inSection:0];
   // [[_pickImagesandDate objectAtIndex:indexPath.row]valueForKey:@"Image"];
   // [_pickImagesandDate replaceObjectAtIndex:rowToReload.row withObject:countArray];
//    Documents * document = [NSEntityDescription insertNewObjectForEntityForName:@"Documents"
//                                                         inManagedObjectContext:_appDelegate.managedObjectContext];
//    document.document = _arrayForDelegate;
    [self.listTable beginUpdates];
    [self.listTable reloadRowsAtIndexPaths:[NSArray arrayWithObjects:rowToReload, nil] withRowAnimation:UITableViewRowAnimationNone];
    [self.listTable endUpdates];

    [self.delegate sendData:dict];
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
