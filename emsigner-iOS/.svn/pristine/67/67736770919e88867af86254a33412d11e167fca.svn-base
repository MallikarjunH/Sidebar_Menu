//
//  WorkflowTableViewController.m
//  emSigner
//
//  Created by eMudhra on 08/10/18.
//  Copyright Â© 2018 Emudhra. All rights reserved.
//

#import "WorkflowTableViewController.h"
#import "workflow.h"
#import "UploadDocuments.h"
#import "HoursConstants.h"
#import "WebserviceManager.h"
#import "Connection.h"
#import "ShowActivities.h"
#import "SignersInformation.h"
#import "MBProgressHUD.h"
#import "NSObject+Activity.h"


static int const kHeaderSectionTag = 6900;

@interface WorkflowTableViewController ()
@property (assign) NSInteger expandedSectionHeaderNumber;
@property (assign) UITableViewHeaderFooterView *expandedSectionHeader;
@property (strong) NSArray *sectionItems;
@property (strong) NSArray *sectionNames;

@end

@implementation WorkflowTableViewController

- (void)viewDidLoad {
    [super viewDidLoad];

    
    self.title=@"WorkFlows";

    [self.navigationController.navigationBar setTitleTextAttributes:
     @{NSForegroundColorAttributeName:[UIColor whiteColor]}];
    NSDictionary *dTmp = [[NSDictionary alloc] initWithContentsOfFile:[[NSBundle mainBundle] pathForResource:@"data" ofType:@"plist"]];
    self.arrayOriginal = [dTmp valueForKey:@"Objects"];
    
    self.arForTable = [[NSMutableArray alloc] init];
    [self.arForTable addObjectsFromArray:self.arrayOriginal];
    self.tableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];    // Uncomment the following line to preserve selection between presentations.
    
    // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
    // self.navigationItem.rightBarButtonItem = self.editButtonItem;
    _subarray = [[NSMutableArray alloc]init];
    _mainarray= [[NSMutableArray alloc]init];
    [self getWorkFlows];

}
-(void)getWorkFlows
{
    [self startActivity:@"Refreshing..."];
    //https://sandboxapi.emsigner.com/api/GetWorkflows
    NSString *requestURL = [NSString stringWithFormat:@"%@GetWorkflows",kGetWorkFlows];
    
    [WebserviceManager sendSyncRequestWithURLGet:requestURL method:SAServiceReqestHTTPMethodGET body:requestURL completionBlock:^(BOOL status, id responseValue) {
        if(status)
        {
            dispatch_async(dispatch_get_main_queue(),
                           ^{
                               
                               _responseArray=[responseValue valueForKey:@"Response"];
                            

                               for (int i = 0; i<_responseArray.count; i++) {
                                   NSDictionary *dict = _responseArray[i];
                                   NSString *codeR = [[dict objectForKey:@"ParentId"] stringValue];
                                   
                                   if ([codeR isEqualToString:@"0"]) {
                                       [_mainarray addObject:dict];
                                   }
                               }
//
                                   [self.tableView reloadData];
                               
                               [self stopActivity];
                               
                           });
        }
        else{
       
            
            UIAlertController * alert = [UIAlertController
                                         alertControllerWithTitle:nil
                                         message:@"Your emsigner account is no longer active.Please login again"
                                         preferredStyle:UIAlertControllerStyleAlert];
            
            //Add Buttons
            
            UIAlertAction* yesButton = [UIAlertAction
                                        actionWithTitle:@"Ok"
                                        style:UIAlertActionStyleDefault
                                        handler:nil ];
            
            [alert addAction:yesButton];
            
           [self presentViewController:alert animated:YES completion:nil];
            
            return;
        }
      
        
    }];
    
    
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Table view data source
#pragma mark - Table view data source

//- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
//
//    if (self.sectionNames.count > 0) {
//        self.tableView.backgroundView = nil;
//        return self.sectionNames.count;
//    } else {
//        UILabel *messageLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width, self.view.bounds.size.height)];
//
//        messageLabel.text = @"Retrieving data.\nPlease wait.";
//        messageLabel.numberOfLines = 0;
//        messageLabel.textAlignment = NSTextAlignmentCenter;
//        messageLabel.font = [UIFont fontWithName:@"Helvetica Neue" size:20];
//        [messageLabel sizeToFit];
//        self.tableView.backgroundView = messageLabel;
//
//        return 0;
//    }
//}


- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

//- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
//    if (self.expandedSectionHeaderNumber == section) {
//        NSMutableArray *arrayOfItems = [self.sectionItems objectAtIndex:section];
//        return arrayOfItems.count;
//    } else {
//        return 0;
//    }
//}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [_mainarray count];
}

//
//- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section; {
//    return 44.0;
//}
//
//- (void)tableView:(UITableView *)tableView willDisplayHeaderView:(UIView *)view forSection:(NSInteger)section {
//    // recast your view as a UITableViewHeaderFooterView
//    UITableViewHeaderFooterView *header = (UITableViewHeaderFooterView *)view;
//  //  header.contentView.backgroundColor = [UIColor colorWithHexString:@"#408000"];
// //   header.contentView.backgroundColor = [UIColor whiteColor];
//    header.contentView.backgroundColor = [UIColor lightGrayColor];
//    header.textLabel.textColor = [UIColor blackColor];
//    UIImageView *viewWithTag = [self.view viewWithTag:kHeaderSectionTag + section];
//    if (viewWithTag) {
//        [viewWithTag removeFromSuperview];
//    }
//    // add the arrow image
//
//    NSArray * arr = [NSArray arrayWithObjects:[self.sectionItems objectAtIndex:section], nil];
//    if (arr.count >0)
//    {
//        CGSize headerFrame = self.view.frame.size;
//        UIImageView *theImageView = [[UIImageView alloc] initWithFrame:CGRectMake(headerFrame.width - 32, 13, 18, 18)];
//        theImageView.image = [UIImage imageNamed:@"Chevron-Dn-Wht"];
//        theImageView.tag = kHeaderSectionTag + section;
//        [header addSubview:theImageView];
//
//        // make headers touchable
//        header.tag = section;
//        UITapGestureRecognizer *headerTapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(sectionHeaderWasTouched:)];
//        [header addGestureRecognizer:headerTapGesture];
//    }
//}

//- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
//    workflow *cell = [tableView dequeueReusableCellWithIdentifier:@"workflow" forIndexPath:indexPath];
//    NSArray *section = [self.sectionItems objectAtIndex:indexPath.section];
//
//    cell.name.textColor = [UIColor blackColor];
//    cell.name.text = [section objectAtIndex:indexPath.row];
//
//    return cell;
//}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *CellIdentifier = @"Cell";
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] ;
    }
    
    cell.textLabel.text=[[self.mainarray objectAtIndex:indexPath.row] valueForKey:@"CategoryName"];
    cell.imageView.image = [UIImage imageNamed:@"folder"];
    
    return cell;
}

//- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
//    [tableView deselectRowAtIndexPath:indexPath animated:YES];
//
//    UIStoryboard *newStoryBoard = [UIStoryboard storyboardWithName:@"Main" bundle:nil];
//    UploadDocuments *objTrackOrderVC= [newStoryBoard instantiateViewControllerWithIdentifier:@"UploadDocuments"];
//    [self.navigationController pushViewController:objTrackOrderVC animated:YES];
//
//}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{    UITableViewCell *cell = [tableView cellForRowAtIndexPath:indexPath];

    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    _subarray = [NSMutableArray array];
       NSDictionary *d =[self.mainarray objectAtIndex:indexPath.row];
       int CategoryId = [[d valueForKey:@"CategoryId"]intValue];
       NSString* CategoryName = [[d valueForKey:@"CategoryName"]substringToIndex:2];
  
   


    if ([[d valueForKey:@"IsWorkflowCreated"]boolValue] == 0) {
        
                  for (int j= 0; j<_responseArray.count; j++) {
                   NSDictionary * dict1 = _responseArray[j];
                      NSLog(@"%i",j);
                    if (CategoryId == [[dict1 valueForKey:@"ParentId"]intValue]) {
                     NSLog(@"parentId %i",[[dict1 valueForKey:@"ParentId"]intValue]);
                        [_subarray addObject:dict1];

                    }
    }

    if (_subarray.count > 0) {
        
        ShowActivities *objTrackOrderVC= [[ShowActivities alloc] initWithNibName:@"ShowActivities" bundle:nil];
        objTrackOrderVC.showArrayForActivity = _subarray;
        objTrackOrderVC.TotalArrayForActivity = _responseArray;
        objTrackOrderVC.categoryname = CategoryName;
        [self.navigationController pushViewController:objTrackOrderVC animated:YES];
    }
    else
    {
        UIAlertController * alert = [UIAlertController
                                     alertControllerWithTitle:nil
                                     message:@"There are no activities for this Workflow."
                                     preferredStyle:UIAlertControllerStyleAlert];
        UIAlertAction* cancel = [UIAlertAction actionWithTitle:@"Ok" style:UIAlertActionStyleDefault
                                 handler:nil];
        [alert addAction:cancel];
        [self presentViewController:alert animated:YES completion:nil];
       
    }
    }
    else{
        
        NSUserDefaults *savePathForPdf = [NSUserDefaults standardUserDefaults];
        [savePathForPdf setInteger:CategoryId forKey:@"workflowCategoryId"];
        [savePathForPdf synchronize];
        
        SignersInformation *objTrackOrderVC= [[SignersInformation alloc] initWithNibName:@"SignersInformation" bundle:nil];
        objTrackOrderVC.categoryId = [NSString stringWithFormat:@"%i", CategoryId];
        objTrackOrderVC.categoryname = CategoryName;
        [self.navigationController pushViewController:objTrackOrderVC animated:YES];
    }
//    if (_subarray.count > 0) {
//        BOOL isAlreadyInserted=NO;
//        for(NSDictionary *dInner in _subarray ){
//                        NSInteger index=[_subarray indexOfObjectIdenticalTo:dInner];
//                        isAlreadyInserted=(index>0 && index!=NSIntegerMax);
//                        if(isAlreadyInserted) break;
//                    }
//                if(isAlreadyInserted) {
//                    //[self miniMizeThisRows:_subarray];
//                }
//                else {
//                    NSUInteger count=indexPath.row+1;
//                    NSMutableArray *arCells=[NSMutableArray array];
//                    for(NSDictionary *dInner in _subarray ) {
//                        [arCells addObject:[NSIndexPath indexPathForRow:count inSection:0]];
//                        [_mainarray insertObject:dInner atIndex:count++];
//                    }
//                    // [cell setIndentationLevel:count];
//                    [tableView insertRowsAtIndexPaths:arCells withRowAnimation:UITableViewRowAnimationLeft];
//
//                }
//
//    }

    
//   [tableView deselectRowAtIndexPath:indexPath animated:YES];
//
//    NSDictionary *d=[self.arForTable objectAtIndex:indexPath.row];
//        if([d valueForKey:@"Objects"]) {
//            NSArray *ar=[d valueForKey:@"Objects"];
//
//            BOOL isAlreadyInserted=NO;
//
//            for(NSDictionary *dInner in ar ){
//                NSInteger index=[self.arForTable indexOfObjectIdenticalTo:dInner];
//                isAlreadyInserted=(index>0 && index!=NSIntegerMax);
//                if(isAlreadyInserted) break;
//            }
//
//            if(isAlreadyInserted) {
//                [self miniMizeThisRows:ar];
//            } else {
//                NSUInteger count=indexPath.row+1;
//                NSMutableArray *arCells=[NSMutableArray array];
//                for(NSDictionary *dInner in ar ) {
//                    [arCells addObject:[NSIndexPath indexPathForRow:count inSection:0]];
//                    [self.arForTable insertObject:dInner atIndex:count++];
//                }
//                [tableView insertRowsAtIndexPaths:arCells withRowAnimation:UITableViewRowAnimationLeft];
//            }
//        }
//    else
//    {
    
   // }

}

-(void)miniMizeThisRows:(NSArray*)ar{
    
    for(NSDictionary *dInner in ar ) {
        NSUInteger indexToRemove=[self.arForTable indexOfObjectIdenticalTo:dInner];
        NSArray *arInner=[dInner valueForKey:@"Objects"];
        if(arInner && [arInner count]>0){
            [self miniMizeThisRows:arInner];
        }
        
        if([self.arForTable indexOfObjectIdenticalTo:dInner]!=NSNotFound) {
            [self.arForTable removeObjectIdenticalTo:dInner];
            [self.tableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:
                                                         [NSIndexPath indexPathForRow:indexToRemove inSection:0]
                                                         ]
                                       withRowAnimation:UITableViewRowAnimationRight];
        }
    }
}
//- (void)updateTableViewRowDisplay:(NSArray *)arrayOfIndexPaths {
//    [self.tableView beginUpdates];
//    [self.tableView deleteRowsAtIndexPaths:arrayOfIndexPaths withRowAnimation: UITableViewRowAnimationFade];
//    [self.tableView endUpdates];
//}

#pragma mark - Expand / Collapse Methods
//
//- (void)sectionHeaderWasTouched:(UITapGestureRecognizer *)sender {
//    UITableViewHeaderFooterView *headerView = (UITableViewHeaderFooterView *)sender.view;
//    NSInteger section = headerView.tag;
//    UIImageView *eImageView = (UIImageView *)[headerView viewWithTag:kHeaderSectionTag + section];
//    self.expandedSectionHeader = headerView;
//
//    if (self.expandedSectionHeaderNumber == -1) {
//        self.expandedSectionHeaderNumber = section;
//        [self tableViewExpandSection:section withImage: eImageView];
//    } else {
//        if (self.expandedSectionHeaderNumber == section) {
//            [self tableViewCollapeSection:section withImage: eImageView];
//            self.expandedSectionHeader = nil;
//        } else {
//            UIImageView *cImageView  = (UIImageView *)[self.view viewWithTag:kHeaderSectionTag + self.expandedSectionHeaderNumber];
//            [self tableViewCollapeSection:self.expandedSectionHeaderNumber withImage: cImageView];
//            [self tableViewExpandSection:section withImage: eImageView];
//        }
//    }
//}
//
//- (void)tableViewCollapeSection:(NSInteger)section withImage:(UIImageView *)imageView {
//    NSArray *sectionData = [self.sectionItems objectAtIndex:section];
//
//    self.expandedSectionHeaderNumber = -1;
//    if (sectionData.count == 0) {
//        return;
//    } else {
//        [UIView animateWithDuration:0.4 animations:^{
//            imageView.transform = CGAffineTransformMakeRotation((0.0 * M_PI) / 180.0);
//        }];
//        NSMutableArray *arrayOfIndexPaths = [NSMutableArray array];
//        for (int i=0; i< sectionData.count; i++) {
//            NSIndexPath *index = [NSIndexPath indexPathForRow:i inSection:section];
//            [arrayOfIndexPaths addObject:index];
//        }
//        [self.tableView beginUpdates];
//        [self.tableView deleteRowsAtIndexPaths:arrayOfIndexPaths withRowAnimation: UITableViewRowAnimationFade];
//        [self.tableView endUpdates];
//    }
//}
//
//- (void)tableViewExpandSection:(NSInteger)section withImage:(UIImageView *)imageView {
//    NSArray *sectionData = [self.sectionItems objectAtIndex:section];
//
//    if (sectionData.count == 0) {
//        self.expandedSectionHeaderNumber = -1;
//        return;
//    } else {
//        [UIView animateWithDuration:0.4 animations:^{
//            imageView.transform = CGAffineTransformMakeRotation((180.0 * M_PI) / 180.0);
//        }];
//        NSMutableArray *arrayOfIndexPaths = [NSMutableArray array];
//        for (int i=0; i< sectionData.count; i++) {
//            NSIndexPath *index = [NSIndexPath indexPathForRow:i inSection:section];
//            [arrayOfIndexPaths addObject:index];
//        }
//        self.expandedSectionHeaderNumber = section;
//        [self.tableView beginUpdates];
//        [self.tableView insertRowsAtIndexPaths:arrayOfIndexPaths withRowAnimation: UITableViewRowAnimationFade];
//        [self.tableView endUpdates];
//    }
//}


@end
