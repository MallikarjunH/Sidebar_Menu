//
//  DocumentInfoVC.m
//  emSigner
//
//  Created by Administrator on 1/19/17.
//  Copyright Â© 2017 Emudhra. All rights reserved.
//

#import "DocumentInfoVC.h"
#import "MBProgressHUD.h"
#import "SubClassView.h"
#import "NSObject+Activity.h"
#import "WebserviceManager.h"
#import "HoursConstants.h"
#import <QuartzCore/QuartzCore.h>
#import "HomeNewDashBoardVC.h"
#import "LMNavigationController.h"
#import "ViewController.h"
//#import "DocInfoTableViewCell.h"
#import "DocumentInfoCollectionCell.h"


@interface DocumentInfoVC ()
{
    UILabel *label;
    UIButton *button;
    NSMutableArray* countArray;
    NSArray *signatoriescount;
}
@end

@implementation DocumentInfoVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    signatoriescount = [_documentInfoArray valueForKey:@"Signatories"];
//    NSOrderedSet *orderedSet = [NSOrderedSet orderedSetWithArray:signatoriescount];
//    NSArray *arrayWithoutDuplicates = [orderedSet array];
//    NSLog(@"%@",arrayWithoutDuplicates);
    self.tableTitleArray = [NSMutableArray arrayWithObjects:@"",@"Document Category", @"Document Number", @"Uploaded", @"Modified", @"Document Size",@"Number Of Attachments", nil];
    
    self.documentTable.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];
    self.navigationController.navigationBar.topItem.backBarButtonItem = [[UIBarButtonItem alloc]
                                                                         initWithTitle:@"Back" style:UIBarButtonItemStylePlain target:nil action:nil];
    
    self.title = _titleString;
    NSInteger c = 0;
    NSArray* signersCount = [_documentInfoArray valueForKey:@"Signatories"];
    countArray = [[NSMutableArray alloc]init];
    countArray = signersCount[0];
//        for (int j=0; j<countArray.count; j++) {
//                c = countArray.count;
//        }
    
    
    NSLog(@"%li",(long)c);
    //NSLog(@"%lu",(unsigned long)signersCount.count);

//    if ([_status  isEqualToString: @"Recalled"])
//    {
//        _signcollectionView.translatesAutoresizingMaskIntoConstraints = YES;
//        self.authorisedSignatureLabel.frame = CGRectMake(0, 0, 0, 0);
//        self.authorisedSignatureLabel.hidden = YES;
//       _signcollectionView.frame = CGRectMake(0, 0, 0, 5);
//    }

    _recalledArray = [[NSMutableArray alloc]init];

}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return _tableTitleArray.count;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    CGFloat height = 0.0;
    if (indexPath.row == 0 && [_status  isEqualToString: @"Recalled"]) {
        height = 0.0;
    } else {
        height = 45.0;
    }
    return height;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *CellIdentifier = @"cell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    
    cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:CellIdentifier];
    cell.textLabel.text = [_tableTitleArray objectAtIndex:indexPath.row];
    
//    for (int i= 0; i<[_tableTitleArray count]; i++) {
//
//        if (indexPath.section == i)
//        {
    
            if (indexPath.row == 0) {
                
                UICollectionViewFlowLayout *layout=[[UICollectionViewFlowLayout alloc] init];
                self.signcollectionView =[[UICollectionView alloc] initWithFrame:CGRectMake(8, 0, 320, 40) collectionViewLayout:layout];
                [self.signcollectionView  setDataSource:self];
                [self.signcollectionView  setDelegate:self];
                [self.signcollectionView  setBackgroundColor:[UIColor whiteColor]];
                [self.signcollectionView  registerClass:[DocumentInfoCollectionCell class] forCellWithReuseIdentifier:@"DocumentInfoCollectionCell"];
                
                if ([_status  isEqualToString: @"Recalled"])
                {
                    _signcollectionView.translatesAutoresizingMaskIntoConstraints = YES;
                    self.authorisedSignatureLabel.frame = CGRectMake(0, 0, 0, 0);
                    self.authorisedSignatureLabel.hidden = YES;
                    _signcollectionView.frame = CGRectMake(0, 0, 0, 5);
                }

                else [cell addSubview:self.signcollectionView];
                [self.signcollectionView reloadData];
            }
            if (indexPath.row == 1)
            {
                [cell.detailTextLabel setText:[_documentInfoArray  valueForKey:@"CategoryName"]];
            }

            if (indexPath.row == 2) {
                [cell.detailTextLabel setText: [NSString stringWithFormat:@"%@%@",@"  ",[_documentInfoArray valueForKey:@"DocumentNumber"]]];
            }
            if (indexPath.row == 3) {
                
                NSString *dateFromArray =[_documentInfoArray  valueForKey:@"UploadDateTime"];
                
                if (![dateFromArray isEqualToString:@"N/A"])
                {
                    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
                    [formatter setDateFormat:@"dd-MM-yyyy HH:mm:ss"];
                    NSDate *dates = [formatter dateFromString:dateFromArray];
                    cell.detailTextLabel.text = [self transformedValue:dates];
                }
                else cell.detailTextLabel.text = dateFromArray;
              
            }
            if (indexPath.row == 4) {
                
                NSString *dateFromArray = [_documentInfoArray  valueForKey:@"Modifieddate"];
                if (![dateFromArray isEqualToString:@"N/A"])
                {
                    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
                    [formatter setDateFormat:@"dd-MM-yyyy HH:mm:ss"];
                    NSDate *dates = [formatter dateFromString:dateFromArray];
                    cell.detailTextLabel.text = [self transformedValue:dates];
                }
                else cell.detailTextLabel.text = dateFromArray;
               
            }
            if (indexPath.row == 5)
            {
                NSString *kb = [_documentInfoArray valueForKey:@"DocumentSize"] ;
                cell.detailTextLabel.text = [kb stringByAppendingString:@" Kb "];
            }
            
            if (indexPath.row == 6)
            {
                [cell.detailTextLabel setText: [NSString stringWithFormat:@"%@%@",@"  ",[_documentInfoArray  valueForKey:@"NoOfAttachment"]]];
            }
            
            
            
        //}
//}
    
    return cell;
    
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    //NSArray *signatoriescount = [_documentInfoArray valueForKey:@"Signatories"];
    return signatoriescount.count;
    //return _documentInfoArray.count ;
    //return [_documentInfoArray valueForKey:@"Signatories"].count;
}

- (__kindof UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    DocumentInfoCollectionCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"DocumentInfoCollectionCell" forIndexPath:indexPath];
    UILabel * lbl = [[UILabel alloc]initWithFrame:CGRectMake(8, 8, 30, 20)];
    lbl.text = [@"S" stringByAppendingFormat:@"%ld ",(long)indexPath.row+1];
    [cell addSubview:lbl];
    
    //cell.signatoriesLabel.text = [@"S" stringByAppendingFormat:@"%ld ",(long)indexPath.row+1];
    [self.signcollectionView selectItemAtIndexPath:indexPath animated:NO scrollPosition:UICollectionViewScrollPositionNone];
    //NSArray *signatoriescount = [[_documentInfoArray objectAtIndex:indexPath.row]valueForKey:@"Signatories"];
   // NSArray *signatoriescount = [_documentInfoArray valueForKey:@"Signatories"];
    //for (int i=0; i<signatoriescount.count; i++) {
        NSLog(@"%@",[[signatoriescount objectAtIndex:indexPath.item]valueForKey:@"StatusID"]);
        if ([[[signatoriescount objectAtIndex:indexPath.item]valueForKey:@"StatusID"]intValue]==13)
        {
            //rgb(254,100,46)
            cell.backgroundColor = ([UIColor colorWithRed:102.0/255.0 green:153.0/255.0 blue:0.0/255.0 alpha:1.0]);
            
        }
        else if ([[[signatoriescount objectAtIndex:indexPath.item]valueForKey:@"StatusID"]intValue]==7)
        {
            //rgb(102,153,0)
            cell.backgroundColor = ([UIColor colorWithRed:243.0/255.0 green:111.0/255.0 blue:33.0/255.0 alpha:1.0]);
        }
        else if ([[[signatoriescount objectAtIndex:indexPath.item]valueForKey:@"StatusID"]intValue]==53)
        {
            cell.backgroundColor = ([UIColor colorWithRed:243.0/255.0 green:111.0/255.0 blue:33.0/255.0 alpha:1.0]);
        }
        
        else
        {
            cell.backgroundColor = ([UIColor colorWithRed:153.0/255.0 green:153.0/255.0 blue:153.0/255.0 alpha:1.0]);
        }
  //  }
    
 

    return cell;
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    
    NSArray *signatoriescount = [_documentInfoArray valueForKey:@"Signatories"];
 
    
    NSString *signatory = [@"Name : " stringByAppendingFormat:@"%@", [[signatoriescount objectAtIndex:indexPath.row] valueForKey:@"Name"]];
    NSString *Email_Id =  [@"Email Id : " stringByAppendingFormat:@"%@", [[signatoriescount objectAtIndex:indexPath.row]valueForKey:@"EmailID"]];
  
    
    NSString *signatoryInfo = [@"Signatory "stringByAppendingFormat:@"S%ld",indexPath.row+1];
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:signatoryInfo
                                                    message:[NSString stringWithFormat: @"%@ \n %@ ",signatory,Email_Id]
                                                   delegate:nil
                                          cancelButtonTitle:@"OK"
                                          otherButtonTitles:nil,
                          nil];
    [alert show];
    
}
- (BOOL)collectionView:(UICollectionView *)collectionView shouldDeselectItemAtIndexPath:(NSIndexPath *)indexPath{
    return YES;
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
- (IBAction)cancelBtnClicked:(id)sender
{
    [self dismissViewControllerAnimated:YES completion:Nil];
}


- (id)transformedValue:(NSDate *)date
{
    // Initialize the formatter.
    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
    [formatter setDateStyle:NSDateFormatterShortStyle];
    [formatter setTimeStyle:NSDateFormatterNoStyle];
    
    // Initialize the calendar and flags.
    unsigned unitFlags = NSYearCalendarUnit | NSMonthCalendarUnit |  NSDayCalendarUnit | NSWeekdayCalendarUnit;
    NSCalendar *calendar = [NSCalendar currentCalendar];
    
    // Create reference date for supplied date.
    NSDateComponents *comps = [calendar components:unitFlags fromDate:date];
    [comps setHour:0];
    [comps setMinute:0];
    [comps setSecond:0];
    NSDate *suppliedDate = [calendar dateFromComponents:comps];
    
    // Iterate through the eight days (tomorrow, today, and the last six).
    int i;
    for (i = -1; i < 7; i++)
    {
        // Initialize reference date.
        comps = [calendar components:unitFlags fromDate:[NSDate date]];
        [comps setHour:0];
        [comps setMinute:0];
        [comps setSecond:0];
        [comps setDay:[comps day] - i];
        NSDate *referenceDate = [calendar dateFromComponents:comps];
        // Get week day (starts at 1).
        int weekday = [[calendar components:unitFlags fromDate:referenceDate] weekday] - 1;
        
        if ([suppliedDate compare:referenceDate] == NSOrderedSame && i == -1)
        {
            // Tomorrow
            return [NSString stringWithString:@"Tomorrow"];
        }
        else if ([suppliedDate compare:referenceDate] == NSOrderedSame && i == 0)
        {
            // Today's time (a la iPhone Mail)
            formatter.dateFormat = @"HH:mm:ss";
            NSString *convertedString = [formatter stringFromDate:date];
            // [formatter setDateStyle:NSDateFormatterNoStyle];
            //[formatter setTimeStyle:NSDateFormatterShortStyle];
            return convertedString;
        }
        else if ([suppliedDate compare:referenceDate] == NSOrderedSame && i == 1)
        {
            // Today
            return [NSString stringWithString:@"Yesterday"];
        }
        else if ([suppliedDate compare:referenceDate] == NSOrderedSame)
        {
            // Day of the week
            NSString *day = [[formatter weekdaySymbols] objectAtIndex:weekday];
            return day;
        }
    }
    
    // It's not in those eight days.
    NSString *defaultDate = [formatter stringFromDate:date];
    return defaultDate;
}
/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/


@end
